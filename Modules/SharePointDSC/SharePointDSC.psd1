#
# Module manifest for module 'SharePointDsc'
#
# Generated by: Brian Farnhill
#
# Generated on: 17/03/2015
#

@{

# Script module or binary module file associated with this manifest.
# RootModule = ''

# Version number of this module.
ModuleVersion = '1.0.0.0'

# ID used to uniquely identify this module
GUID = '6c1176a0-4fac-4134-8ca2-3fa8a21a7b90'

# Author of this module
Author = 'Microsoft Corporation'

# Company or vendor of this module
CompanyName = 'Microsoft Corporation'

# Copyright statement for this module
Copyright = '(c) 2015-2016 Microsoft Corporation. All rights reserved.'

# Description of the functionality provided by this module
Description = 'This DSC module is used to deploy and configure SharePoint Server 2013 and 2016, and convers a wide range of areas including web apps, service apps and farm configuration.'

# Minimum version of the Windows PowerShell engine required by this module
# PowerShellVersion = ''

# Name of the Windows PowerShell host required by this module
# PowerShellHostName = ''

# Minimum version of the Windows PowerShell host required by this module
# PowerShellHostVersion = ''

# Minimum version of Microsoft .NET Framework required by this module
# DotNetFrameworkVersion = ''

# Minimum version of the common language runtime (CLR) required by this module
# CLRVersion = ''

# Processor architecture (None, X86, Amd64) required by this module
# ProcessorArchitecture = ''

# Modules that must be imported into the global environment prior to importing this module
# RequiredModules = @()

# Assemblies that must be loaded prior to importing this module
# RequiredAssemblies = @()

# Script files (.ps1) that are run in the caller's environment prior to importing this module.
# ScriptsToProcess = @()

# Type files (.ps1xml) to be loaded when importing this module
# TypesToProcess = @()

# Format files (.ps1xml) to be loaded when importing this module
# FormatsToProcess = @()

# Modules to import as nested modules of the module specified in RootModule/ModuleToProcess
NestedModules = @("modules\SharePointDSC.Util\SharePointDSC.Util.psm1")

# Functions to export from this module
FunctionsToExport = '*'

# Cmdlets to export from this module
CmdletsToExport = @("Invoke-SPDSCCommand",
                    "Get-SPDSCInstalledProductVersion",
                    "Get-SPDSCContentService",
                    "Rename-SPDSCParamValue",
                    "Add-SPDSCUserToLocalAdmin",
                    "Remove-SPDSCUserToLocalAdmin",
                    "Test-SPDSCObjectHasProperty",
                    "Test-SPDSCRunAsCredential",
                    "Test-SPDSCUserIsLocalAdmin",
                    "Test-SPDSCSpecificParameters",
                    "Set-SPDSCObjectPropertyIfValueExists",
                    "Get-SPDSCUserProfileSubTypeManager")

# Variables to export from this module
VariablesToExport = '*'

# Aliases to export from this module
AliasesToExport = '*'

# List of all modules packaged with this module
# ModuleList = @()

# List of all files packaged with this module
# FileList = @()

# HelpInfo URI of this module
# HelpInfoURI = ''

# Default prefix for commands exported from this module. Override the default prefix using Import-Module -prefix.
# DefaultCommandPrefix = ''

# Private data to pass to the module specified in RootModule/ModuleToProcess. This may also contain a PSData hashtable with additional module metadata used by PowerShell.
PrivateData = @{

    PSData = @{

        # Tags applied to this module. These help with module discovery in online galleries.
        Tags = @('DesiredStateConfiguration', 'DSC', 'DSCResourceKit', 'DSCResource')

        # A URL to the license for this module.
        LicenseUri = 'https://github.com/PowerShell/SharePointDSC/blob/master/LICENSE'

        # A URL to the main website for this project.
        ProjectUri = 'https://github.com/PowerShell/SharePointDSC'

        # A URL to an icon representing this module.
        # IconUri = ''

        # ReleaseNotes of this module
        # ReleaseNotes = '
 * Renamed module from xSharePoint to SharePointDsc
 * Fixed bug in managed account schedule get method
 * Fixed incorrect output of server name in xSPOutgoingEmailSettings 
 * Added ensure properties to multiple resources to standardise schemas
 * Added xSPSearchContentSource, xSPContentDatabase, xSPServiceAppSecurity, xSPAccessServiceApp, xSPExcelServiceApp, xSPPerformancePointServiceApp, xSPIrmSettings resources
 * Fixed a bug in xSPInstallPrereqs that would cause an updated version of AD rights management to fail the test method for SharePoint 2013
 * Fixed bug in xSPFarmAdministrators where testing for users was case sensitive
 * Fixed a bug with reboot detection in xSPInstallPrereqs
 * Added SearchCenterUrl property to xSPSearchServiceApp
 * Fixed a bug in xSPAlternateUrl to account for a default zone URL being changed
 * Added content type hub URL option to xSPManagedMetadataServiceApp for when it provisions a service app
 * Updated xSPWebAppPolicy to allow addition and removal of accounts, including the Cache Accounts, to the web application policy.
 * Fixed bug with claims accounts not being added to web app policy in xSPCacheAccounts
 * Added option to not apply cache accounts policy to the web app in xSPCacheAccounts
 * Farm Passphrase now uses a PSCredential object, in order to pass the value as a securestring on xSPCreateFarm and xSPJoinFarm
 * xSPCreateFarm supports specifying Kerberos authentication for the Central Admin site with the CentralAdministrationAuth property
 * Fixed nuget package format for development feed from AppVeyor
 * Fixed bug with get output of xSPUSageApplication
 * Added SXSpath parameter to xSPInstallPrereqs for installing Windows features in offline environments
 * Added additional parameters to xSPWebAppGeneralSettings for use in hardened environments
 * Added timestamps to verbose logging for resources that pause for responses from SharePoint
 * Added options to customise the installation directories used when installing SharePoint with xSPInstall
 * Aligned testing to common DSC resource test module
 * Fixed bug in the xSPWebApplication which prevented a web application from being created in an existing application pool
 * Updated xSPInstallPrereqs to align with SharePoint 2016 RTM changes
 * Added support for cloud search index to xSPSearchServiceApp
 * Fixed bug in xSPWebAppGeneralSettings that prevented setting a security validation timeout value
'

    } # End of PSData hashtable

} # End of PrivateData hashtable
}

