/*
**Description**

This resource is responsible for provisioning the search service application. 
The current version lets you specify the database name and server, as well as the application pool.
If the application pool is changed the DSC resource will set it back as per what is set in the resource.
The database name parameter is used as the prefix for all search databases (so you will end up with one for the admin database which matches the name, and then "_analyticsreportingstore", "_crawlstore" and "_linkstore" databases as well).

**Example**

    xSPSearchCrawlRule IntranetCrawlAccount
    {
        Path = "https://intranet.sharepoint.contoso.com"
        ServiceAppName = "Search Service Application"
        Ensure = "Present"
        Type = "InclusionRule"
        CrawlConfigurationRules = "FollowLinksNoPageCrawl","CrawlComplexUrls", "CrawlAsHTTP"
        AuthenticationType = "DefaultRuleAccess"
    }

    xSPSearchCrawlRule IntranetCrawlAccountCertificate
    {
        Path = "https://intranet.sharepoint.contoso.com"
        ServiceAppName = "Search Service Application"
        Ensure = "Present"
        Type = "InclusionRule"
        CrawlConfigurationRules = "FollowLinksNoPageCrawl","CrawlComplexUrls", "CrawlAsHTTP"
        AuthenticationType = "CertificateRuleAccess"
        CertificateName = "Certificate Name"
    }
*/

[ClassVersion("1.0.0.0"), FriendlyName("xSPSearchCrawlRule")]
class MSFT_xSPSearchCrawlRule : OMI_BaseResource
{
    [Key, Description("The name of the search service application")] string Path;
    [Required, Description("The name of the search service application")] string ServiceAppName;
    [Write, Description("Authentication type used by the crawl rule"), ValueMap{"DefaultRuleAccess", "BasicAccountRuleAccess", "CertificateRuleAccess", "NTLMAccountRuleAccess", "FormRuleAccess", "CookieRuleAccess", "AnonymousAccess"}, Values{"DefaultRuleAccess", "BasicAccountRuleAccess", "CertificateRuleAccess", "NTLMAccountRuleAccess", "FormRuleAccess", "CookieRuleAccess", "AnonymousAccess"}] string AuthenticationType;
    [Write, Description("The type of the rule"), ValueMap{"InclusionRule","ExclusionRule"}, Values{"InclusionRule","ExclusionRule"}] string Type;
    [Write, Description("The configuration options for this rule"), ValueMap{"FollowLinksNoPageCrawl","CrawlComplexUrls", "CrawlAsHTTP"}, Values{"FollowLinksNoPageCrawl","CrawlComplexUrls", "CrawlAsHTTP"}] string CrawlConfigurationRules[];
    [Write, Description("The credentials used for this crawl rule (used for types BasicAccountRuleAccess and NTLMAccountRuleAccess)"), EmbeddedInstance("MSFT_Credential")] String AuthenticationCredentials;
    [Write, Description("The certificate used for this crawl rule (used for type CertificateRuleAccess)")] string CertificateName;
    [Write, Description("Present if the service app should exist, absent if it should not"), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] string Ensure;
    [Write, Description("POWERSHELL 4 ONLY: The account to run this resource as, use PsDscRunAsAccount if using PowerShell 5"), EmbeddedInstance("MSFT_Credential")] String InstallAccount;
};

